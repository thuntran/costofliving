usethis::use_git()
install.packages("rlang")
install.packages("rlang")
usethis::use_git()
usethis::use_readme_rmd()
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
usethis::use_readme_rmd()
usethis::use_readme_rmd()
install.packages("rlang")
usethis::use_readme_rmd()
shiny::runApp('~/Desktop/App-1')
install.packages(c("moderndive", "scales", "janitor"))
library(readr)
us_cost_of_living_combined_data <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
View(us_cost_of_living_combined_data)
library(tidyverse)
us_cost_of_living <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
usethis::use_data(us_cost_of_living, overwrite = TRUE)
library(readr)
us_cost_of_living_combined_data <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
View(us_cost_of_living_combined_data)
library(readr)
us_cost_of_living_combined_data <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
View(us_cost_of_living_combined_data)
View(us_cost_of_living)
View(us_cost_of_living_combined_data)
state <- function(state) {
if (state != us_cost_of_living_combined_data$state) {
print("State is not entered correctly. Please try again") }
else { us_cost_of_living_combined_data$grossSalary = minimumWage * 40 * 52
return(us_cost_of_living_combined_data$grossSalary)
}
}
state <- function(state) {
if (state != us_cost_of_living_combined_data$state) {
print("State is not entered correctly. Please try again") }
else { us_cost_of_living_combined_data$grossSalary = minimumWage * 40 * 52
return(us_cost_of_living_combined_data$grossSalary)
}
}
library(readr)
us_cost_of_living_combined_data <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
View(us_cost_of_living_combined_data)
state <- function(state) {
if (state != us_cost_of_living_combined_data$state) {
print("State is not entered correctly. Please try again") }
else { us_cost_of_living_combined_data$grossSalary = minimumWage * 40 * 52
return(us_cost_of_living_combined_data$grossSalary)
}
}
state <- function(state) {
if (state != us_cost_of_living_combined_data$state) {
print("State is not entered correctly. Please try again") }
else { us_cost_of_living_combined_data$grossSalary = minimumWage * 40 * 52
return(us_cost_of_living_combined_data$grossSalary)
}
}
library(costofliving)
state("Massachusetts")
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data$grossSalary = minimumWage * 40 * 52
}
else {
print("Error")
}
}
state("Massachusetts")
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data$grossSalary = us_cost_of_living_combined_data$minimumWage * 40 * 52
}
else {
print("Error")
}
}
state("Massachusetts")
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data$grossSalary = us_cost_of_living_combined_data$minimumWage * 40 * 52
return(us_cost_of_living_combined_data$grossSalary)
}
else {
print("Error")
}
}
state("Massachusetts")
library(tidyverse)
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data)
}
else {
print("Error")
}
}
state("Massachusetts")
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error")
}
}
state("Massachusetts")
View(us_cost_of_living_combined_data_Salary)
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error")
}
}
state("Massachusetts")
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state")
}
}
state("Massachusetts")
grossSalary <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52) %>%
subset(us_cost_of_living_combined_data_grossSalary, state == "Massachusetts")
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
state("Massachusetts")
grossSalary(Massachusetts)
grossSalary("Massachusetts")
grossSalary <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52) %>%
subset(us_cost_of_living_combined_data_grossSalary, state == "")
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary(Massachusetts)
grossSalary("Massachusetts")
grossSalary <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52) %>%
return(grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
grossSalary <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52) %>%
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
state("Massachusetts")
state <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52) %>%
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
state("Massachusetts")
grossSalary <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52) %>%
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
state("Massachusetts")
grossSalary("Massachusetts")
library(costofliving)
grossSalary("Massachusetts")
state("Massachusetts")
grossSalary("Massachusetts")
grossSalary <- function(state) {
if (state %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
shiny::runApp('~/Desktop/App-1')
grossSalary <- function(inputstate) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data[(us_cost_of_living_combined_data$state==us_cost_of_living_combined_data$inputstate), ] %>%
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
grossSalary <- function(inputstate) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data[(us_cost_of_living_combined_data$state==us_cost_of_living_combined_data$inputstate), ] %>%
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
shiny::runApp('~/Desktop/App-1')
library(tidyverse)
grossSalary <- function(inputstate) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data[(us_cost_of_living_combined_data$state==us_cost_of_living_combined_data$inputstate), ] %>%
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary <- function(inputstate) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
# us_cost_of_living_combined_data[(us_cost_of_living_combined_data$state==inputstate), ] %>%
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
library(readr)
us_cost_of_living_combined_data <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
View(us_cost_of_living_combined_data)
grossSalary <- function(inputstate) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
# us_cost_of_living_combined_data[(us_cost_of_living_combined_data$state==inputstate), ] %>%
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
grossSalary <- function(inputstate) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
# us_cost_of_living_combined_data[(us_cost_of_living_combined_data$state==inputstate), ] %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
grossSalary <- function(input) {
for (inputstate in input) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
}
grossSalary("Massachusetts","Iowa")
grossSalary(c("Massachusetts","Iowa"))
input = list()
grossSalary <- function(input) {
for (inputstate in input) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
}
grossSalary("Massachusetts","Iowa")
grossSalary(c("Massachusetts","Iowa"))
input = list(input)
library(tidyverse)
input = list(input)
grossSalary <- function(input) {
for (inputstate in input) {
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
}
grossSalary(c("Massachusetts","Iowa"))
grossSalary("Massachusetts","Iowa")
input = list(input)
class(input)
grossSalary(list("Massachusetts","Iowa"))
library(tidyverse)
input = list(input)
grossSalary <- function(input) {
for (inputstate in input) {
print(inputstate)
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
}
grossSalary(list("Massachusetts","Iowa"))
View(us_cost_of_living_combined_data)
grossSalary <- function(input) {
input = list(input1, input2)
for (inputstate in input) {
print(inputstate)
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
}
grossSalary(list("Massachusetts","Iowa"))
input = list(input1, input2)
#input = list(input1, input2)
grossSalary <- function(input, ...) {
for (inputstate in input) {
print(inputstate)
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
}
grossSalary(list("Massachusetts","Iowa"))
grossSalary(c("Massachusetts","Iowa"))
grossSalary <- function(input) {
# for (inputstate in input) {
#   print(inputstate)
if (inputstate %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==inputstate) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
grossSalary <- function(input) {
# for (inputstate in input) {
#   print(inputstate)
if (input %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==input) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
grossSalary <- function(input) {
# for (inputstate in input) {
#   print(inputstate)
if (input %in% us_cost_of_living_combined_data$state) {
us_cost_of_living_combined_data_grossSalary <- us_cost_of_living_combined_data %>%
filter(state==input) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_combined_data_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
grossSalary("Massachusetts")
grossSalary(c("Massachusetts","Iowa"))
grossSalary("Massachusetts","Iowa")
library(readr)
us_cost_of_living_combined_data <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
View(us_cost_of_living_combined_data)
library(tidyverse)
us_cost_of_living <- read_csv("data-raw/us_cost_of_living_combined_data.csv")
usethis::use_data(us_cost_of_living, overwrite = TRUE)
grossSalary <- function(input) {
# for (inputstate in input) {
#   print(inputstate)
if (input %in% us_cost_of_living$state) {
us_cost_of_living_grossSalary <- us_cost_of_living %>%
filter(state==input) %>%
mutate(grossSalary = minimumWage * 40 * 52)
return(us_cost_of_living_grossSalary)
}
else {
print("Error: Please enter a valid state and check that the first letter is capitalized.")
}
}
